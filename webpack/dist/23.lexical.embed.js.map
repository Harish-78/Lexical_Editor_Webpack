{"version":3,"file":"23.lexical.embed.js","mappings":"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","sources":["webpack://editor-webpack/./src/LexicalEditor/ui/EquationEditor.css?03cf","webpack://editor-webpack/./src/LexicalEditor/ui/EquationEditor.tsx","webpack://editor-webpack/./src/LexicalEditor/nodes/EquationComponent.tsx","webpack://editor-webpack/./src/LexicalEditor/ui/EquationEditor.css"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./EquationEditor.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./EquationEditor.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport type { Ref, RefObject } from 'react'\n\nimport './EquationEditor.css'\n\nimport * as React from 'react'\nimport { ChangeEvent, forwardRef } from 'react'\n\ntype BaseEquationEditorProps = {\n  equation: string\n  inline: boolean\n  setEquation: (equation: string) => void\n}\n\nfunction EquationEditor(\n  { equation, setEquation, inline }: BaseEquationEditorProps,\n  forwardedRef: Ref<HTMLInputElement | HTMLTextAreaElement>\n): JSX.Element {\n  const onChange = (event: ChangeEvent) => {\n    setEquation((event.target as HTMLInputElement).value)\n  }\n\n  return inline && forwardedRef instanceof HTMLInputElement ? (\n    <span className=\"EquationEditor_inputBackground\">\n      <span className=\"EquationEditor_dollarSign\">$</span>\n      <input\n        className=\"EquationEditor_inlineEditor\"\n        value={equation}\n        onChange={onChange}\n        autoFocus={true}\n        ref={forwardedRef as RefObject<HTMLInputElement>}\n      />\n      <span className=\"EquationEditor_dollarSign\">$</span>\n    </span>\n  ) : (\n    <div className=\"EquationEditor_inputBackground\">\n      <span className=\"EquationEditor_dollarSign\">{'$$\\n'}</span>\n      <textarea\n        className=\"EquationEditor_blockEditor\"\n        value={equation}\n        onChange={onChange}\n        ref={forwardedRef as RefObject<HTMLTextAreaElement>}\n      />\n      <span className=\"EquationEditor_dollarSign\">{'\\n$$'}</span>\n    </div>\n  )\n}\n\nexport default forwardRef(EquationEditor)\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\nimport { mergeRegister } from '@lexical/utils'\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  COMMAND_PRIORITY_HIGH,\n  KEY_ESCAPE_COMMAND,\n  NodeKey,\n  SELECTION_CHANGE_COMMAND,\n} from 'lexical'\nimport * as React from 'react'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\n\nimport EquationEditor from '../ui/EquationEditor.tsx'\nimport KatexRenderer from '../ui/KatexRenderer.tsx'\nimport { $isEquationNode } from './EquationNode.tsx'\n\ntype EquationComponentProps = {\n  equation: string\n  inline: boolean\n  nodeKey: NodeKey\n}\n\nexport default function EquationComponent({\n  equation,\n  inline,\n  nodeKey,\n}: EquationComponentProps): JSX.Element {\n  const [editor] = useLexicalComposerContext()\n  const [equationValue, setEquationValue] = useState(equation)\n  const [showEquationEditor, setShowEquationEditor] = useState<boolean>(false)\n  const inputRef = useRef(null)\n\n  const onHide = useCallback(\n    (restoreSelection?: boolean) => {\n      setShowEquationEditor(false)\n      editor.update(() => {\n        const node = $getNodeByKey(nodeKey)\n        if ($isEquationNode(node)) {\n          node.setEquation(equationValue)\n          if (restoreSelection) {\n            node.selectNext(0, 0)\n          }\n        }\n      })\n    },\n    [editor, equationValue, nodeKey]\n  )\n\n  useEffect(() => {\n    if (!showEquationEditor && equationValue !== equation) {\n      setEquationValue(equation)\n    }\n  }, [showEquationEditor, equation, equationValue])\n\n  useEffect(() => {\n    if (showEquationEditor) {\n      return mergeRegister(\n        editor.registerCommand(\n          SELECTION_CHANGE_COMMAND,\n          (payload) => {\n            const activeElement = document.activeElement\n            const inputElem = inputRef.current\n            if (inputElem !== activeElement) {\n              onHide()\n            }\n            return false\n          },\n          COMMAND_PRIORITY_HIGH\n        ),\n        editor.registerCommand(\n          KEY_ESCAPE_COMMAND,\n          (payload) => {\n            const activeElement = document.activeElement\n            const inputElem = inputRef.current\n            if (inputElem === activeElement) {\n              onHide(true)\n              return true\n            }\n            return false\n          },\n          COMMAND_PRIORITY_HIGH\n        )\n      )\n    } else {\n      return editor.registerUpdateListener(({ editorState }) => {\n        const isSelected = editorState.read(() => {\n          const selection = $getSelection()\n          return (\n            $isNodeSelection(selection) &&\n            selection.has(nodeKey) &&\n            selection.getNodes().length === 1\n          )\n        })\n        if (isSelected) {\n          setShowEquationEditor(true)\n        }\n      })\n    }\n  }, [editor, nodeKey, onHide, showEquationEditor])\n\n  return (\n    <>\n      {showEquationEditor ? (\n        <EquationEditor\n          equation={equationValue}\n          setEquation={setEquationValue}\n          inline={inline}\n          ref={inputRef}\n        />\n      ) : (\n        <ErrorBoundary onError={(e) => editor._onError(e)} fallback={null}>\n          <KatexRenderer\n            equation={equationValue}\n            inline={inline}\n            onDoubleClick={() => setShowEquationEditor(true)}\n          />\n        </ErrorBoundary>\n      )}\n    </>\n  )\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n */\n\n.EquationEditor_inlineEditor {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  outline: 0;\n  color: #8421a2;\n  background-color: inherit;\n  resize: none;\n}\n\n.EquationEditor_blockEditor {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  outline: 0;\n  color: #8421a2;\n  background-color: inherit;\n  resize: none;\n  width: 100%;\n}\n\n.EquationEditor_inputBackground {\n  background-color: #eee;\n}\n\n.EquationEditor_dollarSign {\n  text-align: left;\n  color: #b0b0b0;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/LexicalEditor/ui/EquationEditor.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;EAOE;;AAEF;EACE,UAAU;EACV,SAAS;EACT,SAAS;EACT,UAAU;EACV,cAAc;EACd,yBAAyB;EACzB,YAAY;AACd;;AAEA;EACE,UAAU;EACV,SAAS;EACT,SAAS;EACT,UAAU;EACV,cAAc;EACd,yBAAyB;EACzB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,cAAc;AAChB\",\"sourcesContent\":[\"/**\\n * Copyright (c) Meta Platforms, Inc. and affiliates.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n *\\n */\\n\\n.EquationEditor_inlineEditor {\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  outline: 0;\\n  color: #8421a2;\\n  background-color: inherit;\\n  resize: none;\\n}\\n\\n.EquationEditor_blockEditor {\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  outline: 0;\\n  color: #8421a2;\\n  background-color: inherit;\\n  resize: none;\\n  width: 100%;\\n}\\n\\n.EquationEditor_inputBackground {\\n  background-color: #eee;\\n}\\n\\n.EquationEditor_dollarSign {\\n  text-align: left;\\n  color: #b0b0b0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","EquationEditor","_ref","forwardedRef","equation","setEquation","onChange","event","target","value","inline","HTMLInputElement","_jsxs","className","children","_jsx","autoFocus","ref","forwardRef","EquationComponent","nodeKey","_useLexicalComposerCo","useLexicalComposerContext","editor","_slicedToArray","_useState","useState","_useState2","equationValue","setEquationValue","_useState3","_useState4","showEquationEditor","setShowEquationEditor","inputRef","useRef","onHide","useCallback","restoreSelection","update","node","$getNodeByKey","$isEquationNode","selectNext","useEffect","mergeRegister","registerCommand","SELECTION_CHANGE_COMMAND","payload","activeElement","document","current","COMMAND_PRIORITY_HIGH","KEY_ESCAPE_COMMAND","registerUpdateListener","_ref2","editorState","read","selection","$getSelection","$isNodeSelection","has","getNodes","length","_Fragment","ErrorBoundary","onError","e","_onError","fallback","KatexRenderer","onDoubleClick","___CSS_LOADER_EXPORT___","push","module","id"],"sourceRoot":""}