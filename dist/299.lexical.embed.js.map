{"version":3,"file":"299.lexical.embed.js","mappings":"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","sources":["webpack://editor-webpack/./src/LexicalEditor/nodes/ImageNode.css?eadf","webpack://editor-webpack/./node_modules/@lexical/react/LexicalNestedComposer.prod.mjs","webpack://editor-webpack/./src/LexicalEditor/ui/ImageResizer.tsx","webpack://editor-webpack/./src/LexicalEditor/nodes/ImageComponent.tsx","webpack://editor-webpack/./src/LexicalEditor/nodes/ImageNode.css"],"sourcesContent":["\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./ImageNode.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./ImageNode.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport{useCollaborationContext as e}from\"@lexical/react/LexicalCollaborationContext\";import{LexicalComposerContext as t,createLexicalComposerContext as r}from\"@lexical/react/LexicalComposerContext\";import{useRef as o,useContext as n,useMemo as l,useEffect as i}from\"react\";import{jsx as a}from\"react/jsx-runtime\";function s(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var c=s((function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}));function p(e){const t=e.transform();return null!==t?new Set([t]):new Set}function d({initialEditor:s,children:d,initialNodes:f,initialTheme:u,skipCollabChecks:m}){const h=o(!1),x=n(t);null==x&&c(9);const[_,{getTheme:g}]=x,v=l((()=>{const e=u||g()||void 0,t=r(x,e);if(void 0!==e&&(s._config.theme=e),s._parentEditor=_,f)for(let e of f){let t=null,r=null;if(\"function\"!=typeof e){const o=e;e=o.replace,t=o.with,r=o.withKlass||null}const o=s._nodes.get(e.getType());s._nodes.set(e.getType(),{exportDOM:o?o.exportDOM:void 0,klass:e,replace:t,replaceWithKlass:r,transforms:p(e)})}else{const e=s._nodes=new Map(_._nodes);for(const[t,r]of e)s._nodes.set(t,{exportDOM:r.exportDOM,klass:r.klass,replace:r.replace,replaceWithKlass:r.replaceWithKlass,transforms:p(r.klass)})}return s._config.namespace=_._config.namespace,s._editable=_._editable,[s,t]}),[]),{isCollabActive:w,yjsDocMap:b}=e(),M=m||h.current||b.has(s.getKey());return i((()=>{M&&(h.current=!0)}),[M]),i((()=>_.registerEditableListener((e=>{s.setEditable(e)}))),[s,_]),a(t.Provider,{value:v,children:!w||M?d:null})}export{d as LexicalNestedComposer};\n","/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\nimport type { LexicalEditor } from 'lexical'\r\n\r\nimport { calculateZoomLevel } from '@lexical/utils'\r\nimport * as React from 'react'\r\nimport { useRef } from 'react'\r\n\r\nfunction clamp(value: number, min: number, max: number) {\r\n  return Math.min(Math.max(value, min), max)\r\n}\r\n\r\nconst Direction = {\r\n  east: 1 << 0,\r\n  north: 1 << 3,\r\n  south: 1 << 1,\r\n  west: 1 << 2,\r\n}\r\n\r\nexport default function ImageResizer({\r\n  onResizeStart,\r\n  onResizeEnd,\r\n  buttonRef,\r\n  imageRef,\r\n  maxWidth,\r\n  editor,\r\n  showCaption,\r\n  setShowCaption,\r\n  captionsEnabled,\r\n}: {\r\n  editor: LexicalEditor\r\n  buttonRef: { current: null | HTMLButtonElement }\r\n  imageRef: { current: null | HTMLElement }\r\n  maxWidth?: number\r\n  onResizeEnd: (width: 'inherit' | number, height: 'inherit' | number) => void\r\n  onResizeStart: () => void\r\n  setShowCaption: (show: boolean) => void\r\n  showCaption: boolean\r\n  captionsEnabled: boolean\r\n}): JSX.Element {\r\n  const controlWrapperRef = useRef<HTMLDivElement>(null)\r\n  const userSelect = useRef({\r\n    priority: '',\r\n    value: 'default',\r\n  })\r\n  const positioningRef = useRef<{\r\n    currentHeight: 'inherit' | number\r\n    currentWidth: 'inherit' | number\r\n    direction: number\r\n    isResizing: boolean\r\n    ratio: number\r\n    startHeight: number\r\n    startWidth: number\r\n    startX: number\r\n    startY: number\r\n  }>({\r\n    currentHeight: 0,\r\n    currentWidth: 0,\r\n    direction: 0,\r\n    isResizing: false,\r\n    ratio: 0,\r\n    startHeight: 0,\r\n    startWidth: 0,\r\n    startX: 0,\r\n    startY: 0,\r\n  })\r\n  const editorRootElement = editor.getRootElement()\r\n  // Find max width, accounting for editor padding.\r\n  const maxWidthContainer = maxWidth\r\n    ? maxWidth\r\n    : editorRootElement !== null\r\n      ? editorRootElement.getBoundingClientRect().width - 20\r\n      : 100\r\n  const maxHeightContainer =\r\n    editorRootElement !== null\r\n      ? editorRootElement.getBoundingClientRect().height - 20\r\n      : 100\r\n\r\n  const minWidth = 100\r\n  const minHeight = 100\r\n\r\n  const setStartCursor = (direction: number) => {\r\n    const ew = direction === Direction.east || direction === Direction.west\r\n    const ns = direction === Direction.north || direction === Direction.south\r\n    const nwse =\r\n      (direction & Direction.north && direction & Direction.west) ||\r\n      (direction & Direction.south && direction & Direction.east)\r\n\r\n    const cursorDir = ew ? 'ew' : ns ? 'ns' : nwse ? 'nwse' : 'nesw'\r\n\r\n    if (editorRootElement !== null) {\r\n      editorRootElement.style.setProperty(\r\n        'cursor',\r\n        `${cursorDir}-resize`,\r\n        'important'\r\n      )\r\n    }\r\n    if (document.body !== null) {\r\n      document.body.style.setProperty(\r\n        'cursor',\r\n        `${cursorDir}-resize`,\r\n        'important'\r\n      )\r\n      userSelect.current.value = document.body.style.getPropertyValue(\r\n        '-webkit-user-select'\r\n      )\r\n      userSelect.current.priority = document.body.style.getPropertyPriority(\r\n        '-webkit-user-select'\r\n      )\r\n      document.body.style.setProperty(\r\n        '-webkit-user-select',\r\n        `none`,\r\n        'important'\r\n      )\r\n    }\r\n  }\r\n\r\n  const setEndCursor = () => {\r\n    if (editorRootElement !== null) {\r\n      editorRootElement.style.setProperty('cursor', 'text')\r\n    }\r\n    if (document.body !== null) {\r\n      document.body.style.setProperty('cursor', 'default')\r\n      document.body.style.setProperty(\r\n        '-webkit-user-select',\r\n        userSelect.current.value,\r\n        userSelect.current.priority\r\n      )\r\n    }\r\n  }\r\n\r\n  const handlePointerDown = (\r\n    event: React.PointerEvent<HTMLDivElement>,\r\n    direction: number\r\n  ) => {\r\n    if (!editor.isEditable()) {\r\n      return\r\n    }\r\n\r\n    const image = imageRef.current\r\n    const controlWrapper = controlWrapperRef.current\r\n\r\n    if (image !== null && controlWrapper !== null) {\r\n      event.preventDefault()\r\n      const { width, height } = image.getBoundingClientRect()\r\n      const zoom = calculateZoomLevel(image)\r\n      const positioning = positioningRef.current\r\n      positioning.startWidth = width\r\n      positioning.startHeight = height\r\n      positioning.ratio = width / height\r\n      positioning.currentWidth = width\r\n      positioning.currentHeight = height\r\n      positioning.startX = event.clientX / zoom\r\n      positioning.startY = event.clientY / zoom\r\n      positioning.isResizing = true\r\n      positioning.direction = direction\r\n\r\n      setStartCursor(direction)\r\n      onResizeStart()\r\n\r\n      controlWrapper.classList.add('image-control-wrapper--resizing')\r\n      image.style.height = `${height}px`\r\n      image.style.width = `${width}px`\r\n\r\n      document.addEventListener('pointermove', handlePointerMove)\r\n      document.addEventListener('pointerup', handlePointerUp)\r\n    }\r\n  }\r\n  const handlePointerMove = (event: PointerEvent) => {\r\n    const image = imageRef.current\r\n    const positioning = positioningRef.current\r\n\r\n    const isHorizontal =\r\n      positioning.direction & (Direction.east | Direction.west)\r\n    const isVertical =\r\n      positioning.direction & (Direction.south | Direction.north)\r\n\r\n    if (image !== null && positioning.isResizing) {\r\n      const zoom = calculateZoomLevel(image)\r\n      // Corner cursor\r\n      if (isHorizontal && isVertical) {\r\n        let diff = Math.floor(positioning.startX - event.clientX / zoom)\r\n        diff = positioning.direction & Direction.east ? -diff : diff\r\n\r\n        const width = clamp(\r\n          positioning.startWidth + diff,\r\n          minWidth,\r\n          maxWidthContainer\r\n        )\r\n\r\n        const height = width / positioning.ratio\r\n        image.style.width = `${width}px`\r\n        image.style.height = `${height}px`\r\n        positioning.currentHeight = height\r\n        positioning.currentWidth = width\r\n      } else if (isVertical) {\r\n        let diff = Math.floor(positioning.startY - event.clientY / zoom)\r\n        diff = positioning.direction & Direction.south ? -diff : diff\r\n\r\n        const height = clamp(\r\n          positioning.startHeight + diff,\r\n          minHeight,\r\n          maxHeightContainer\r\n        )\r\n\r\n        image.style.height = `${height}px`\r\n        positioning.currentHeight = height\r\n      } else {\r\n        let diff = Math.floor(positioning.startX - event.clientX / zoom)\r\n        diff = positioning.direction & Direction.east ? -diff : diff\r\n\r\n        const width = clamp(\r\n          positioning.startWidth + diff,\r\n          minWidth,\r\n          maxWidthContainer\r\n        )\r\n\r\n        image.style.width = `${width}px`\r\n        positioning.currentWidth = width\r\n      }\r\n    }\r\n  }\r\n  const handlePointerUp = () => {\r\n    const image = imageRef.current\r\n    const positioning = positioningRef.current\r\n    const controlWrapper = controlWrapperRef.current\r\n    if (image !== null && controlWrapper !== null && positioning.isResizing) {\r\n      const width = positioning.currentWidth\r\n      const height = positioning.currentHeight\r\n      positioning.startWidth = 0\r\n      positioning.startHeight = 0\r\n      positioning.ratio = 0\r\n      positioning.startX = 0\r\n      positioning.startY = 0\r\n      positioning.currentWidth = 0\r\n      positioning.currentHeight = 0\r\n      positioning.isResizing = false\r\n\r\n      controlWrapper.classList.remove('image-control-wrapper--resizing')\r\n\r\n      setEndCursor()\r\n      onResizeEnd(width, height)\r\n\r\n      document.removeEventListener('pointermove', handlePointerMove)\r\n      document.removeEventListener('pointerup', handlePointerUp)\r\n    }\r\n  }\r\n  return (\r\n    <div ref={controlWrapperRef}>\r\n      {!showCaption && captionsEnabled && (\r\n        <button\r\n          className=\"image-caption-button\"\r\n          ref={buttonRef}\r\n          onClick={() => {\r\n            setShowCaption(!showCaption)\r\n          }}\r\n        >\r\n          Add Caption\r\n        </button>\r\n      )}\r\n      <div\r\n        className=\"image-resizer image-resizer-n\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.north)\r\n        }}\r\n      />\r\n      <div\r\n        className=\"image-resizer image-resizer-ne\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.north | Direction.east)\r\n        }}\r\n      />\r\n      <div\r\n        className=\"image-resizer image-resizer-e\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.east)\r\n        }}\r\n      />\r\n      <div\r\n        className=\"image-resizer image-resizer-se\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.south | Direction.east)\r\n        }}\r\n      />\r\n      <div\r\n        className=\"image-resizer image-resizer-s\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.south)\r\n        }}\r\n      />\r\n      <div\r\n        className=\"image-resizer image-resizer-sw\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.south | Direction.west)\r\n        }}\r\n      />\r\n      <div\r\n        className=\"image-resizer image-resizer-w\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.west)\r\n        }}\r\n      />\r\n      <div\r\n        className=\"image-resizer image-resizer-nw\"\r\n        onPointerDown={(event) => {\r\n          handlePointerDown(event, Direction.north | Direction.west)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\nimport type {\r\n  BaseSelection,\r\n  LexicalCommand,\r\n  LexicalEditor,\r\n  NodeKey,\r\n} from 'lexical'\r\n\r\nimport './ImageNode.css'\r\n\r\nimport { HashtagNode } from '@lexical/hashtag'\r\nimport { LinkNode } from '@lexical/link'\r\nimport { AutoFocusPlugin } from '@lexical/react/LexicalAutoFocusPlugin'\r\nimport { useCollaborationContext } from '@lexical/react/LexicalCollaborationContext'\r\nimport { CollaborationPlugin } from '@lexical/react/LexicalCollaborationPlugin'\r\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext'\r\nimport { LexicalErrorBoundary } from '@lexical/react/LexicalErrorBoundary'\r\nimport { HashtagPlugin } from '@lexical/react/LexicalHashtagPlugin'\r\nimport { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin'\r\nimport { LexicalNestedComposer } from '@lexical/react/LexicalNestedComposer'\r\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin'\r\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection'\r\nimport { mergeRegister } from '@lexical/utils'\r\nimport {\r\n  $getNodeByKey,\r\n  $getSelection,\r\n  $isNodeSelection,\r\n  $isRangeSelection,\r\n  $setSelection,\r\n  CLICK_COMMAND,\r\n  COMMAND_PRIORITY_LOW,\r\n  createCommand,\r\n  DRAGSTART_COMMAND,\r\n  KEY_BACKSPACE_COMMAND,\r\n  KEY_DELETE_COMMAND,\r\n  KEY_ENTER_COMMAND,\r\n  KEY_ESCAPE_COMMAND,\r\n  LineBreakNode,\r\n  ParagraphNode,\r\n  RootNode,\r\n  SELECTION_CHANGE_COMMAND,\r\n  TextNode,\r\n} from 'lexical'\r\nimport * as React from 'react'\r\nimport { Suspense, useCallback, useEffect, useRef, useState } from 'react'\r\n\r\nimport { useSettings } from '../context/SettingsContext.tsx'\r\nimport { useSharedHistoryContext } from '../context/SharedHistoryContext.tsx'\r\nimport brokenImage from '../images/image-broken.svg'\r\nimport EmojisPlugin from '../plugins/EmojisPlugin/index.ts'\r\nimport KeywordsPlugin from '../plugins/KeywordsPlugin/index.ts'\r\nimport LinkPlugin from '../plugins/LinkPlugin/index.tsx'\r\nimport MentionsPlugin from '../plugins/MentionsPlugin/index.tsx'\r\nimport ContentEditable from '../ui/ContentEditable.tsx'\r\nimport ImageResizer from '../ui/ImageResizer.tsx'\r\nimport Placeholder from '../ui/Placeholder.tsx'\r\nimport { EmojiNode } from './EmojiNode.tsx'\r\nimport { $isImageNode } from './ImageNode.tsx'\r\nimport { KeywordNode } from './KeywordNode.ts'\r\n\r\nconst imageCache = new Set()\r\n\r\nexport const RIGHT_CLICK_IMAGE_COMMAND: LexicalCommand<MouseEvent> =\r\n  createCommand('RIGHT_CLICK_IMAGE_COMMAND')\r\n\r\nfunction useSuspenseImage(src: string) {\r\n  if (!imageCache.has(src)) {\r\n    throw new Promise((resolve) => {\r\n      const img = new Image()\r\n      img.src = src\r\n      img.onload = () => {\r\n        imageCache.add(src)\r\n        resolve(null)\r\n      }\r\n      img.onerror = () => {\r\n        imageCache.add(src)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction LazyImage({\r\n  altText,\r\n  className,\r\n  imageRef,\r\n  src,\r\n  width,\r\n  height,\r\n  maxWidth,\r\n  onError,\r\n}: {\r\n  altText: string\r\n  className: string | null\r\n  height: 'inherit' | number\r\n  imageRef: { current: null | HTMLImageElement }\r\n  maxWidth: number\r\n  src: string\r\n  width: 'inherit' | number\r\n  onError: () => void\r\n}): JSX.Element {\r\n  useSuspenseImage(src)\r\n  return (\r\n    <img\r\n      className={className || undefined}\r\n      src={src}\r\n      alt={altText}\r\n      ref={imageRef}\r\n      style={{\r\n        height,\r\n        maxWidth,\r\n        width,\r\n      }}\r\n      onError={onError}\r\n      draggable=\"false\"\r\n    />\r\n  )\r\n}\r\n\r\nfunction BrokenImage(): JSX.Element {\r\n  return (\r\n    <img\r\n      src={brokenImage}\r\n      style={{\r\n        height: 200,\r\n        opacity: 0.2,\r\n        width: 200,\r\n      }}\r\n      draggable=\"false\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default function ImageComponent({\r\n  src,\r\n  altText,\r\n  nodeKey,\r\n  width,\r\n  height,\r\n  maxWidth,\r\n  resizable,\r\n  showCaption,\r\n  caption,\r\n  captionsEnabled,\r\n}: {\r\n  altText: string\r\n  caption: LexicalEditor\r\n  height: 'inherit' | number\r\n  maxWidth: number\r\n  nodeKey: NodeKey\r\n  resizable: boolean\r\n  showCaption: boolean\r\n  src: string\r\n  width: 'inherit' | number\r\n  captionsEnabled: boolean\r\n}): JSX.Element {\r\n  const imageRef = useRef<null | HTMLImageElement>(null)\r\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\r\n  const [isSelected, setSelected, clearSelection] =\r\n    useLexicalNodeSelection(nodeKey)\r\n  const [isResizing, setIsResizing] = useState<boolean>(false)\r\n  const { isCollabActive } = useCollaborationContext()\r\n  const [editor] = useLexicalComposerContext()\r\n  const [selection, setSelection] = useState<BaseSelection | null>(null)\r\n  const activeEditorRef = useRef<LexicalEditor | null>(null)\r\n  const [isLoadError, setIsLoadError] = useState<boolean>(false)\r\n\r\n  const $onDelete = useCallback(\r\n    (payload: KeyboardEvent) => {\r\n      if (isSelected && $isNodeSelection($getSelection())) {\r\n        const event: KeyboardEvent = payload\r\n        event.preventDefault()\r\n        const node = $getNodeByKey(nodeKey)\r\n        if ($isImageNode(node)) {\r\n          node.remove()\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    [isSelected, nodeKey]\r\n  )\r\n\r\n  const $onEnter = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      const latestSelection = $getSelection()\r\n      const buttonElem = buttonRef.current\r\n      if (\r\n        isSelected &&\r\n        $isNodeSelection(latestSelection) &&\r\n        latestSelection.getNodes().length === 1\r\n      ) {\r\n        if (showCaption) {\r\n          // Move focus into nested editor\r\n          $setSelection(null)\r\n          event.preventDefault()\r\n          caption.focus()\r\n          return true\r\n        } else if (\r\n          buttonElem !== null &&\r\n          buttonElem !== document.activeElement\r\n        ) {\r\n          event.preventDefault()\r\n          buttonElem.focus()\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    [caption, isSelected, showCaption]\r\n  )\r\n\r\n  const $onEscape = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      if (\r\n        activeEditorRef.current === caption ||\r\n        buttonRef.current === event.target\r\n      ) {\r\n        $setSelection(null)\r\n        editor.update(() => {\r\n          setSelected(true)\r\n          const parentRootElement = editor.getRootElement()\r\n          if (parentRootElement !== null) {\r\n            parentRootElement.focus()\r\n          }\r\n        })\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    [caption, editor, setSelected]\r\n  )\r\n\r\n  const onClick = useCallback(\r\n    (payload: MouseEvent) => {\r\n      const event = payload\r\n\r\n      if (isResizing) {\r\n        return true\r\n      }\r\n      if (event.target === imageRef.current) {\r\n        if (event.shiftKey) {\r\n          setSelected(!isSelected)\r\n        } else {\r\n          clearSelection()\r\n          setSelected(true)\r\n        }\r\n        return true\r\n      }\r\n\r\n      return false\r\n    },\r\n    [isResizing, isSelected, setSelected, clearSelection]\r\n  )\r\n\r\n  const onRightClick = useCallback(\r\n    (event: MouseEvent): void => {\r\n      editor.getEditorState().read(() => {\r\n        const latestSelection = $getSelection()\r\n        const domElement = event.target as HTMLElement\r\n        if (\r\n          domElement.tagName === 'IMG' &&\r\n          $isRangeSelection(latestSelection) &&\r\n          latestSelection.getNodes().length === 1\r\n        ) {\r\n          editor.dispatchCommand(RIGHT_CLICK_IMAGE_COMMAND, event as MouseEvent)\r\n        }\r\n      })\r\n    },\r\n    [editor]\r\n  )\r\n\r\n  useEffect(() => {\r\n    let isMounted = true\r\n    const rootElement = editor.getRootElement()\r\n    const unregister = mergeRegister(\r\n      editor.registerUpdateListener(({ editorState }) => {\r\n        if (isMounted) {\r\n          setSelection(editorState.read(() => $getSelection()))\r\n        }\r\n      }),\r\n      editor.registerCommand(\r\n        SELECTION_CHANGE_COMMAND,\r\n        (_, activeEditor) => {\r\n          activeEditorRef.current = activeEditor\r\n          return false\r\n        },\r\n        COMMAND_PRIORITY_LOW\r\n      ),\r\n      editor.registerCommand<MouseEvent>(\r\n        CLICK_COMMAND,\r\n        onClick,\r\n        COMMAND_PRIORITY_LOW\r\n      ),\r\n      editor.registerCommand<MouseEvent>(\r\n        RIGHT_CLICK_IMAGE_COMMAND,\r\n        onClick,\r\n        COMMAND_PRIORITY_LOW\r\n      ),\r\n      editor.registerCommand(\r\n        DRAGSTART_COMMAND,\r\n        (event) => {\r\n          if (event.target === imageRef.current) {\r\n            // TODO This is just a temporary workaround for FF to behave like other browsers.\r\n            // Ideally, this handles drag & drop too (and all browsers).\r\n            event.preventDefault()\r\n            return true\r\n          }\r\n          return false\r\n        },\r\n        COMMAND_PRIORITY_LOW\r\n      ),\r\n      editor.registerCommand(\r\n        KEY_DELETE_COMMAND,\r\n        $onDelete,\r\n        COMMAND_PRIORITY_LOW\r\n      ),\r\n      editor.registerCommand(\r\n        KEY_BACKSPACE_COMMAND,\r\n        $onDelete,\r\n        COMMAND_PRIORITY_LOW\r\n      ),\r\n      editor.registerCommand(KEY_ENTER_COMMAND, $onEnter, COMMAND_PRIORITY_LOW),\r\n      editor.registerCommand(\r\n        KEY_ESCAPE_COMMAND,\r\n        $onEscape,\r\n        COMMAND_PRIORITY_LOW\r\n      )\r\n    )\r\n\r\n    rootElement?.addEventListener('contextmenu', onRightClick)\r\n\r\n    return () => {\r\n      isMounted = false\r\n      unregister()\r\n      rootElement?.removeEventListener('contextmenu', onRightClick)\r\n    }\r\n  }, [\r\n    clearSelection,\r\n    editor,\r\n    isResizing,\r\n    isSelected,\r\n    nodeKey,\r\n    $onDelete,\r\n    $onEnter,\r\n    $onEscape,\r\n    onClick,\r\n    onRightClick,\r\n    setSelected,\r\n  ])\r\n\r\n  const setShowCaption = () => {\r\n    editor.update(() => {\r\n      const node = $getNodeByKey(nodeKey)\r\n      if ($isImageNode(node)) {\r\n        node.setShowCaption(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onResizeEnd = (\r\n    nextWidth: 'inherit' | number,\r\n    nextHeight: 'inherit' | number\r\n  ) => {\r\n    // Delay hiding the resize bars for click case\r\n    setTimeout(() => {\r\n      setIsResizing(false)\r\n    }, 200)\r\n\r\n    editor.update(() => {\r\n      const node = $getNodeByKey(nodeKey)\r\n      if ($isImageNode(node)) {\r\n        node.setWidthAndHeight(nextWidth, nextHeight)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onResizeStart = () => {\r\n    setIsResizing(true)\r\n  }\r\n\r\n  const { historyState } = useSharedHistoryContext()\r\n  const {\r\n    settings: { showNestedEditorTreeView },\r\n  } = useSettings()\r\n\r\n  const draggable = isSelected && $isNodeSelection(selection) && !isResizing\r\n  const isFocused = isSelected || isResizing\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <>\r\n        <div draggable={draggable}>\r\n          {isLoadError ? (\r\n            <BrokenImage />\r\n          ) : (\r\n            <LazyImage\r\n              className={\r\n                isFocused\r\n                  ? `focused ${$isNodeSelection(selection) ? 'draggable' : ''}`\r\n                  : null\r\n              }\r\n              src={src}\r\n              altText={altText}\r\n              imageRef={imageRef}\r\n              width={width}\r\n              height={height}\r\n              maxWidth={maxWidth}\r\n              onError={() => setIsLoadError(true)}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {showCaption && (\r\n          <div className=\"image-caption-container\">\r\n            <LexicalNestedComposer\r\n              initialEditor={caption}\r\n              initialNodes={[\r\n                RootNode,\r\n                TextNode,\r\n                LineBreakNode,\r\n                ParagraphNode,\r\n                LinkNode,\r\n                EmojiNode,\r\n                HashtagNode,\r\n                KeywordNode,\r\n              ]}\r\n            >\r\n              <AutoFocusPlugin />\r\n              <MentionsPlugin />\r\n              <LinkPlugin />\r\n              <EmojisPlugin />\r\n              <HashtagPlugin />\r\n              <KeywordsPlugin />\r\n\r\n              <HistoryPlugin externalHistoryState={historyState} />\r\n\r\n              <RichTextPlugin\r\n                contentEditable={\r\n                  <ContentEditable className=\"ImageNode__contentEditable\" />\r\n                }\r\n                placeholder={\r\n                  <Placeholder className=\"ImageNode__placeholder\">\r\n                    Enter a caption...\r\n                  </Placeholder>\r\n                }\r\n                ErrorBoundary={LexicalErrorBoundary}\r\n              />\r\n            </LexicalNestedComposer>\r\n          </div>\r\n        )}\r\n        {resizable && $isNodeSelection(selection) && isFocused && (\r\n          <ImageResizer\r\n            showCaption={showCaption}\r\n            setShowCaption={setShowCaption}\r\n            editor={editor}\r\n            buttonRef={buttonRef}\r\n            imageRef={imageRef}\r\n            maxWidth={maxWidth}\r\n            onResizeStart={onResizeStart}\r\n            onResizeEnd={onResizeEnd}\r\n            captionsEnabled={!isLoadError && captionsEnabled}\r\n          />\r\n        )}\r\n      </>\r\n    </Suspense>\r\n  )\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n *\r\n */\r\n\r\n.ImageNode__contentEditable {\r\n  min-height: 30px;\r\n  border: 0px;\r\n  resize: none;\r\n  cursor: text;\r\n  caret-color: rgb(5, 5, 5);\r\n  display: block;\r\n  position: relative;\r\n  outline: 0px;\r\n  padding: 10px;\r\n  user-select: text;\r\n  font-size: 12px;\r\n  width: calc(100% - 20px);\r\n  white-space: pre-wrap;\r\n  word-break: break-word;\r\n}\r\n\r\n.ImageNode__placeholder {\r\n  font-size: 12px;\r\n  color: #888;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  text-overflow: ellipsis;\r\n  top: 10px;\r\n  left: 10px;\r\n  user-select: none;\r\n  white-space: nowrap;\r\n  display: inline-block;\r\n  pointer-events: none;\r\n}\r\n\r\n.image-control-wrapper--resizing {\r\n  touch-action: none;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/LexicalEditor/nodes/ImageNode.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;EAOE;;AAEF;EACE,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,yBAAyB;EACzB,cAAc;EACd,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,wBAAwB;EACxB,qBAAqB;EACrB,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,WAAW;EACX,gBAAgB;EAChB,kBAAkB;EAClB,uBAAuB;EACvB,SAAS;EACT,UAAU;EACV,iBAAiB;EACjB,mBAAmB;EACnB,qBAAqB;EACrB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;AACpB\",\"sourcesContent\":[\"/**\\r\\n * Copyright (c) Meta Platforms, Inc. and affiliates.\\r\\n *\\r\\n * This source code is licensed under the MIT license found in the\\r\\n * LICENSE file in the root directory of this source tree.\\r\\n *\\r\\n *\\r\\n */\\r\\n\\r\\n.ImageNode__contentEditable {\\r\\n  min-height: 30px;\\r\\n  border: 0px;\\r\\n  resize: none;\\r\\n  cursor: text;\\r\\n  caret-color: rgb(5, 5, 5);\\r\\n  display: block;\\r\\n  position: relative;\\r\\n  outline: 0px;\\r\\n  padding: 10px;\\r\\n  user-select: text;\\r\\n  font-size: 12px;\\r\\n  width: calc(100% - 20px);\\r\\n  white-space: pre-wrap;\\r\\n  word-break: break-word;\\r\\n}\\r\\n\\r\\n.ImageNode__placeholder {\\r\\n  font-size: 12px;\\r\\n  color: #888;\\r\\n  overflow: hidden;\\r\\n  position: absolute;\\r\\n  text-overflow: ellipsis;\\r\\n  top: 10px;\\r\\n  left: 10px;\\r\\n  user-select: none;\\r\\n  white-space: nowrap;\\r\\n  display: inline-block;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.image-control-wrapper--resizing {\\r\\n  touch-action: none;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","e","c","t","URLSearchParams","append","arguments","length","Error","__esModule","Object","prototype","hasOwnProperty","call","default","p","transform","Set","d","initialEditor","s","children","initialNodes","f","initialTheme","u","skipCollabChecks","m","h","x","_","getTheme","g","v","_config","theme","_parentEditor","r","o","replace","with","withKlass","_nodes","get","getType","set","exportDOM","klass","replaceWithKlass","transforms","Map","namespace","_editable","isCollabActive","w","yjsDocMap","b","M","current","has","getKey","registerEditableListener","setEditable","Provider","value","clamp","min","max","Math","Direction","east","north","south","west","ImageResizer","_ref","onResizeStart","onResizeEnd","buttonRef","imageRef","maxWidth","editor","showCaption","setShowCaption","captionsEnabled","controlWrapperRef","useRef","userSelect","priority","positioningRef","currentHeight","currentWidth","direction","isResizing","ratio","startHeight","startWidth","startX","startY","editorRootElement","getRootElement","maxWidthContainer","getBoundingClientRect","width","maxHeightContainer","height","handlePointerDown","event","isEditable","image","controlWrapper","preventDefault","_image$getBoundingCli","zoom","calculateZoomLevel","positioning","clientX","clientY","ew","ns","nwse","cursorDir","style","setProperty","concat","document","body","getPropertyValue","getPropertyPriority","setStartCursor","classList","add","addEventListener","handlePointerMove","handlePointerUp","isHorizontal","isVertical","diff","floor","remove","removeEventListener","_jsxs","ref","_jsx","className","onClick","onPointerDown","imageCache","RIGHT_CLICK_IMAGE_COMMAND","createCommand","LazyImage","altText","src","onError","Promise","resolve","img","Image","onload","onerror","useSuspenseImage","undefined","alt","draggable","BrokenImage","brokenImage","opacity","ImageComponent","_ref2","nodeKey","resizable","caption","_useLexicalNodeSelect","useLexicalNodeSelection","_useLexicalNodeSelect2","_slicedToArray","isSelected","setSelected","clearSelection","_useState","useState","_useState2","setIsResizing","_useLexicalComposerCo","useCollaborationContext","useLexicalComposerContext","_useState3","_useState4","selection","setSelection","activeEditorRef","_useState5","_useState6","isLoadError","setIsLoadError","$onDelete","useCallback","payload","$isNodeSelection","$getSelection","node","$getNodeByKey","$isImageNode","$onEnter","latestSelection","buttonElem","getNodes","$setSelection","focus","activeElement","$onEscape","target","update","parentRootElement","shiftKey","onRightClick","getEditorState","read","tagName","$isRangeSelection","dispatchCommand","useEffect","isMounted","rootElement","unregister","mergeRegister","registerUpdateListener","_ref3","editorState","registerCommand","SELECTION_CHANGE_COMMAND","activeEditor","COMMAND_PRIORITY_LOW","CLICK_COMMAND","DRAGSTART_COMMAND","KEY_DELETE_COMMAND","KEY_BACKSPACE_COMMAND","KEY_ENTER_COMMAND","KEY_ESCAPE_COMMAND","historyState","useSharedHistoryContext","useSettings","settings","showNestedEditorTreeView","isFocused","Suspense","fallback","_Fragment","LexicalNestedComposer","RootNode","TextNode","LineBreakNode","ParagraphNode","LinkNode","EmojiNode","HashtagNode","KeywordNode","AutoFocusPlugin","MentionsPlugin","LinkPlugin","EmojisPlugin","HashtagPlugin","KeywordsPlugin","HistoryPlugin","externalHistoryState","RichTextPlugin","contentEditable","ContentEditable","placeholder","Placeholder","ErrorBoundary","LexicalErrorBoundary","nextWidth","nextHeight","setTimeout","setWidthAndHeight","___CSS_LOADER_EXPORT___","push","module","id"],"sourceRoot":""}